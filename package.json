{
  "name": "meltos-vscode",
  "displayName": "meltos-vscode",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onFileSystem:meltos"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "meltos",
          "title": "meltos",
          "icon": "$(add)"
        }
      ]
    },
    "commands": [
      {
        "command": "meltos.openRoom",
        "title": "open room",
        "when": "scmProvider != meltos"
      },
      {
        "command": "meltos.joinRoom",
        "title": "join room",
        "when": "scmProvider != meltos"
      },
      {
        "command": "meltos.clipboard.roomId",
        "title": "copy room id",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.discussion.create",
        "title": "create global discussion",
        "icon": "$(add)",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.discussion.speak",
        "title": "speak",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.discussion.reply",
        "title": "reply",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.discussion.show",
        "title": "show discussion",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.init",
        "title": "init",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.sync",
        "title": "sync room",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.fetch",
        "title": "fetch",
        "when": "scmProvider == meltos",
        "icon": "$(refresh)"
      },
      {
        "command": "meltos.stage",
        "title": "stage",
        "icon": "$(refresh)",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.commit",
        "title": "commit",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.push",
        "title": "push",
        "when": "scmProvider == meltos"
      },
      {
        "command": "meltos.tvc.showHistory",
        "title": "tvc show history",
        "when": "scmProvider == meltos",
        "icon": "$(history)"
      }
    ],
    "views": {
      "scm": [
        {
          "type": "webview",
          "id": "meltos.scm",
          "name": "meltos source control"
        }
      ],
      "meltos": [
        {
          "id": "meltos.users",
          "name": "users"
        },
        {
          "id": "meltos.discussions",
          "name": "discussions",
          "command": "meltos.discussions.create",
          "icon": "$(add)"
        }
      ]
    },
    "menus": {
      "scm/resourceState/context": [
        {
          "command": "meltos.stage",
          "group": "inline",
          "icon": "$(refresh)"
        }
      ],
      "view/title": [
        {
          "command": "meltos.tvc.showHistory",
          "group": "navigation",
          "when": "view == meltos.scm"
        },
        {
          "command": "meltos.fetch",
          "group": "navigation",
          "when": "view == meltos.scm"
        },
        {
          "command": "meltos.discussion.create",
          "group": "navigation",
          "when": "view == meltos.discussions"
        }
      ]
    }
  },
  "scripts": {
    "setup": "npm install --no-optional",
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@babel/core": "^7.23.7",
    "@babel/node": "^7.22.19",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/preset-env": "^7.23.7",
    "@types/copy-paste": "^1.1.33",
    "@types/mocha": "^10.0.6",
    "@types/node": "^18.19.6",
    "@types/vscode": "^1.85.0",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "babel-loader": "^9.1.3",
    "eslint": "^8.56.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.35",
    "@wasm-tool/wasm-pack-plugin": "^1.7.0",
    "bufferutil": "^4.0.8",
    "copy-paste": "^1.5.3",
    "meltos_ts_lib": "file:../meltos_ts_lib",
    "node-wav-player": "^0.2.0",
    "utf-8-validate": "^6.0.3",
    "vsce": "^2.15.0",
    "ws": "^8.16.0"
  }
}
